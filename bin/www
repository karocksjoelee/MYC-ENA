#!/usr/bin/env node

// Module Dependencies .
// ==========================================================================================
var app = require('../middleware');
var debug = require('debug')('myc-ena:server');
var http = require('http');


// HTTP Server Setup .
// ==========================================================================================
const port = normalizePort(process.env.PORT || '7500');
app.set('port', port);

const server = http.createServer(app).listen(port, (req, res) => {
  console.log(`[SERVER] Running at ${port}`);
});

server.on('error', () => {

  if (error.syscall !== 'listen') {
    throw error;
  }

  var bind = typeof port === 'string'
    ? 'Pipe ' + port
    : 'Port ' + port;

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }

});

server.on('listening', () => {

  var addr = server.address();
  var bind = typeof addr === 'string'
    ? 'pipe ' + addr
    : 'port ' + addr.port;
  debug('Listening on ' + bind);

});


// Normalize a port into a number, string, or false.
function normalizePort(val) {
  
  var port = parseInt(val, 10);

  if (isNaN(port)) {
    // named pipe
    return val;
  }

  if (port >= 0) {
    // port number
    return port;
  }

  return false;

}


